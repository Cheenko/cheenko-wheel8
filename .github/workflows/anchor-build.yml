name: Anchor Build (wheel8)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      # optional: pin Anchor version if you want
      ANCHOR_VER: latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Sanity check repo contents
        shell: bash
        run: |
          echo "PWD=$(pwd)"
          ls -la
          echo "----"
          if [ -d wheel8 ]; then
            echo "wheel8/ folder found ✅"
            ls -la wheel8
          else
            echo "wheel8/ folder NOT FOUND ❌"
          fi

      - name: Detect Anchor project dir
        id: finddir
        shell: bash
        run: |
          if [ -f Anchor.toml ]; then
            echo "project_dir=." >> "$GITHUB_OUTPUT"
          elif [ -f wheel8/Anchor.toml ]; then
            echo "project_dir=wheel8" >> "$GITHUB_OUTPUT"
          else
            echo "No Anchor.toml at repo root or in wheel8/"
            ls -la
            exit 1
          fi
          echo "Detected project_dir: $(cat $GITHUB_OUTPUT || true)"

      - name: Show project dir tree
        shell: bash
        run: |
          echo "Project dir: ${{ steps.finddir.outputs.project_dir }}"
          ls -la "${{ steps.finddir.outputs.project_dir }}"

      - name: Install system build deps
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config libssl-dev libudev-dev

      - name: Set up Rust (stable)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache cargo & sbf
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cache/sbf
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Verify Anchor via npx
        shell: bash
        run: |
          set -euxo pipefail
          npx --yes @coral-xyz/anchor@${ANCHOR_VER} --version || true
          echo "Node: $(node -v)"
          echo "NPM : $(npm -v)"
          echo "Rust: $(rustc --version)"

      - name: Build Anchor program (npx)
        shell: bash
        run: |
          set -euxo pipefail
          cd "${{ steps.finddir.outputs.project_dir }}"
          # optional: print Anchor.toml for sanity
          echo "---- Anchor.toml ----"
          sed -n '1,120p' Anchor.toml || true
          echo "---------------------"
          npx --yes @coral-xyz/anchor@${ANCHOR_VER} build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheel8-artifacts
          path: |
            ${{ steps.finddir.outputs.project_dir }}/target/deploy/*
            ${{ steps.finddir.outputs.project_dir }}/target/idl/*
