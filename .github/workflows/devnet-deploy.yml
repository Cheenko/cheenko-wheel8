name: Devnet Deploy (wheel8)

on:
  # auto-trigger when the *named* build workflow completes
  workflow_run:
    workflows: ["Anchor Build (wheel8)"]
    types: [completed]
  # allow manual runs too
  workflow_dispatch:

jobs:
  deploy-devnet:
    # run if manual OR if the triggering build succeeded
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download build artifacts from triggering run
        uses: actions/download-artifact@v4
        with:
          name: wheel8-artifacts
          path: artifacts
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Detect program artifact paths (robust)
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          echo "Artifact files:"
          find artifacts -maxdepth 6 -type f | sed -n '1,400p' || true
          KEYPAIR_PATH=$(find artifacts -type f -path "*/target/deploy/*-keypair.json" | head -n1 || true)
          [ -z "$KEYPAIR_PATH" ] && { echo "No *-keypair.json found" >&2; exit 1; }
          BASENAME=$(basename "$KEYPAIR_PATH")
          PROGNAME="${BASENAME%-keypair.json}"
          SO_PATH=$(find artifacts -type f -path "*/target/deploy/${PROGNAME}.so" | head -n1 || true)
          [ -z "$SO_PATH" ] && { echo "Missing ${PROGNAME}.so" >&2; exit 1; }
          IDL_PATH=$(find artifacts -type f -path "*/target/idl/${PROGNAME}.json" | head -n1 || true || true)
          echo "program_so=$SO_PATH"           >> "$GITHUB_OUTPUT"
          echo "program_keypair=$KEYPAIR_PATH" >> "$GITHUB_OUTPUT"
          echo "idl_path=$IDL_PATH"            >> "$GITHUB_OUTPUT"

      - name: Install Solana CLI
        run: |
          set -euxo pipefail
          curl -sSfL https://release.anza.xyz/stable/install | sh
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
          solana --version

      - name: Restore Devnet wallet from secret
        env:
          DEVNET_WALLET_B64: ${{ secrets.DEVNET_WALLET_B64 }}
        run: |
          set -euxo pipefail
          [ -z "${DEVNET_WALLET_B64:-}" ] && { echo "DEVNET_WALLET_B64 not set" >&2; exit 1; }
          mkdir -p ~/.config/solana
          echo "$DEVNET_WALLET_B64" | base64 -d > ~/.config/solana/id.json
          chmod 600 ~/.config/solana/id.json
          solana-keygen pubkey ~/.config/solana/id.json

      - name: Point CLI to Devnet & show balance
        run: |
          set -euxo pipefail
          solana config set --url https://api.devnet.solana.com
          solana config set --keypair ~/.config/solana/id.json
          solana config get
          solana address
          solana balance || true

      - name: Read Program ID from keypair
        id: programid
        run: |
          set -euxo pipefail
          PROG_PUBKEY=$(solana address -k "${{ steps.detect.outputs.program_keypair }}")
          echo "PROGRAM_ID=$PROG_PUBKEY" >> $GITHUB_ENV
          echo "Program ID: $PROG_PUBKEY"

      - name: Deploy program to Devnet (verbose)
        run: |
          set -euxo pipefail
          solana program deploy "${{ steps.detect.outputs.program_so }}" \
            --program-id "${{ steps.detect.outputs.program_keypair }}" \
            --commitment confirmed --verbose 2>&1 | tee deploy.log

      - name: Show deployed program
        if: success() || failure()
        run: |
          set -euxo pipefail
          echo "Deployed Program ID: $PROGRAM_ID"
          solana program show "$PROGRAM_ID" || true

      - name: Upload deploy logs & outputs
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: wheel8-deploy-${{ github.run_number }}
          path: |
            deploy.log
            ${{ steps.detect.outputs.program_so }}
            ${{ steps.detect.outputs.program_keypair }}
            ${{ steps.detect.outputs.idl_path }}
